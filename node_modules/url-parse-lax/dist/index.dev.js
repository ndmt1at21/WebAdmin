'use strict';

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

var url = require('url');

var prependHttp = require('prepend-http');

module.exports = function (input, options) {
  if (typeof input !== 'string') {
    throw new TypeError("Expected `url` to be of type `string`, got `".concat(_typeof(input), "` instead."));
  }

  var finalUrl = prependHttp(input, Object.assign({
    https: true
  }, options));
  return url.parse(finalUrl);
};