"use strict";

var fs = require('@parcel/fs');

function getCertificate(options) {
  var cert, key;
  return regeneratorRuntime.async(function getCertificate$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          _context.prev = 0;
          _context.next = 3;
          return regeneratorRuntime.awrap(fs.readFile(options.cert));

        case 3:
          cert = _context.sent;
          _context.next = 6;
          return regeneratorRuntime.awrap(fs.readFile(options.key));

        case 6:
          key = _context.sent;
          return _context.abrupt("return", {
            key: key,
            cert: cert
          });

        case 10:
          _context.prev = 10;
          _context.t0 = _context["catch"](0);
          throw new Error('Certificate and/or key not found');

        case 13:
        case "end":
          return _context.stop();
      }
    }
  }, null, null, [[0, 10]]);
}

module.exports = getCertificate;