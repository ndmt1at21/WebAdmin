"use strict";

var t = require('@babel/types');

function getName(asset, type) {
  for (var _len = arguments.length, rest = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
    rest[_key - 2] = arguments[_key];
  }

  return '$' + t.toIdentifier(asset.id) + '$' + type + (rest.length ? '$' + rest.map(function (name) {
    return name === 'default' ? name : t.toIdentifier(name);
  }).join('$') : '');
}

function getIdentifier(asset, type) {
  for (var _len2 = arguments.length, rest = new Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
    rest[_key2 - 2] = arguments[_key2];
  }

  return t.identifier(getName.apply(void 0, [asset, type].concat(rest)));
}

function getExportIdentifier(asset, name) {
  return getIdentifier(asset, 'export', name);
}

exports.getName = getName;
exports.getIdentifier = getIdentifier;
exports.getExportIdentifier = getExportIdentifier;