"use strict";

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var Asset = require('../Asset');

var micromatch = require('micromatch');

var path = require('path');

var _require = require('../utils/glob'),
    glob = _require.glob;

var GlobAsset =
/*#__PURE__*/
function (_Asset) {
  _inherits(GlobAsset, _Asset);

  function GlobAsset(name, options) {
    var _this;

    _classCallCheck(this, GlobAsset);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(GlobAsset).call(this, name, options));
    _this.type = null; // allows this asset to be included in any type bundle

    return _this;
  }

  _createClass(GlobAsset, [{
    key: "load",
    value: function load() {
      var regularExpressionSafeName, files, re, matches, _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, file, match, parts, relative;

      return regeneratorRuntime.async(function load$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              regularExpressionSafeName = this.name;
              if (process.platform === 'win32') regularExpressionSafeName = regularExpressionSafeName.replace(/\\/g, '/');
              _context.next = 4;
              return regeneratorRuntime.awrap(glob(regularExpressionSafeName, {
                onlyFiles: true
              }));

            case 4:
              files = _context.sent;
              re = micromatch.makeRe(regularExpressionSafeName, {
                capture: true
              });
              matches = {};
              _iteratorNormalCompletion = true;
              _didIteratorError = false;
              _iteratorError = undefined;
              _context.prev = 10;

              for (_iterator = files[Symbol.iterator](); !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
                file = _step.value;
                match = file.match(re);
                parts = match.slice(1).filter(Boolean).reduce(function (a, p) {
                  return a.concat(p.split('/'));
                }, []);
                relative = './' + path.relative(path.dirname(this.name), file.normalize('NFC'));
                set(matches, parts, relative);
                this.addDependency(relative);
              }

              _context.next = 18;
              break;

            case 14:
              _context.prev = 14;
              _context.t0 = _context["catch"](10);
              _didIteratorError = true;
              _iteratorError = _context.t0;

            case 18:
              _context.prev = 18;
              _context.prev = 19;

              if (!_iteratorNormalCompletion && _iterator["return"] != null) {
                _iterator["return"]();
              }

            case 21:
              _context.prev = 21;

              if (!_didIteratorError) {
                _context.next = 24;
                break;
              }

              throw _iteratorError;

            case 24:
              return _context.finish(21);

            case 25:
              return _context.finish(18);

            case 26:
              return _context.abrupt("return", matches);

            case 27:
            case "end":
              return _context.stop();
          }
        }
      }, null, this, [[10, 14, 18, 26], [19,, 21, 25]]);
    }
  }, {
    key: "generate",
    value: function generate() {
      return [{
        type: 'js',
        value: 'module.exports = ' + _generate(this.contents) + ';'
      }];
    }
  }]);

  return GlobAsset;
}(Asset);

function _generate(matches) {
  var indent = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';

  if (typeof matches === 'string') {
    return "require(".concat(JSON.stringify(matches), ")");
  }

  var res = indent + '{';
  var first = true;

  for (var key in matches) {
    if (!first) {
      res += ',';
    }

    res += "\n".concat(indent, "  ").concat(JSON.stringify(key), ": ").concat(_generate(matches[key], indent + '  '));
    first = false;
  }

  res += '\n' + indent + '}';
  return res;
}

function set(obj, path, value) {
  for (var i = 0; i < path.length - 1; i++) {
    var part = path[i];

    if (obj[part] == null) {
      obj[part] = {};
    }

    obj = obj[part];
  }

  obj[path[path.length - 1]] = value;
}

module.exports = GlobAsset;