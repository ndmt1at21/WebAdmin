"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

var fs = require('@parcel/fs');

function getCertificate(_x) {
  return _getCertificate.apply(this, arguments);
}

function _getCertificate() {
  _getCertificate = (0, _asyncToGenerator2["default"])(
  /*#__PURE__*/
  regeneratorRuntime.mark(function _callee(options) {
    var cert, key;
    return regeneratorRuntime.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            _context.prev = 0;
            _context.next = 3;
            return fs.readFile(options.cert);

          case 3:
            cert = _context.sent;
            _context.next = 6;
            return fs.readFile(options.key);

          case 6:
            key = _context.sent;
            return _context.abrupt("return", {
              key: key,
              cert: cert
            });

          case 10:
            _context.prev = 10;
            _context.t0 = _context["catch"](0);
            throw new Error('Certificate and/or key not found');

          case 13:
          case "end":
            return _context.stop();
        }
      }
    }, _callee, null, [[0, 10]]);
  }));
  return _getCertificate.apply(this, arguments);
}

module.exports = getCertificate;