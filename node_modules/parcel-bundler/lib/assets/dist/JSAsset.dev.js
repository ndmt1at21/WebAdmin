"use strict";

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

var _traverse = require('@babel/traverse')["default"];

var codeFrame = require('@babel/code-frame').codeFrameColumns;

var _collectDependencies = require('../visitors/dependencies');

var walk = require('babylon-walk');

var Asset = require('../Asset');

var babelParser = require('@babel/parser');

var insertGlobals = require('../visitors/globals');

var fsVisitor = require('../visitors/fs');

var envVisitor = require('../visitors/env');

var processVisitor = require('../visitors/process');

var babel = require('../transforms/babel/transform');

var babel7 = require('../transforms/babel/babel7');

var _generate = require('@babel/generator')["default"];

var terser = require('../transforms/terser');

var SourceMap = require('../SourceMap');

var hoist = require('../scope-hoisting/hoist');

var loadSourceMap = require('../utils/loadSourceMap');

var isAccessedVarChanged = require('../utils/isAccessedVarChanged');

var IMPORT_RE = /\b(?:import\b|export\b|require\s*\()/;
var ENV_RE = /\b(?:process\.env)\b/;
var BROWSER_RE = /\b(?:process\.browser)\b/;
var GLOBAL_RE = /\b(?:process|__dirname|__filename|global|Buffer|define)\b/;
var FS_RE = /\breadFileSync\b/;
var SW_RE = /\bnavigator\s*\.\s*serviceWorker\s*\.\s*register\s*\(/;
var WORKER_RE = /\bnew\s*(?:Shared)?Worker\s*\(/;

var JSAsset =
/*#__PURE__*/
function (_Asset) {
  _inherits(JSAsset, _Asset);

  function JSAsset(name, options) {
    var _this5;

    _classCallCheck(this, JSAsset);

    _this5 = _possibleConstructorReturn(this, _getPrototypeOf(JSAsset).call(this, name, options));
    _this5.type = 'js';
    _this5.globals = new Map();
    _this5.isAstDirty = false;
    _this5.isES6Module = false;
    _this5.outputCode = null;
    _this5.cacheData.env = {};
    _this5.rendition = options.rendition;
    _this5.sourceMap = _this5.rendition ? _this5.rendition.map : null;
    return _this5;
  }

  _createClass(JSAsset, [{
    key: "shouldInvalidate",
    value: function shouldInvalidate(cacheData) {
      return isAccessedVarChanged(cacheData);
    }
  }, {
    key: "mightHaveDependencies",
    value: function mightHaveDependencies() {
      return this.isAstDirty || !/\.js$/.test(this.name) || IMPORT_RE.test(this.contents) || GLOBAL_RE.test(this.contents) || SW_RE.test(this.contents) || WORKER_RE.test(this.contents);
    }
  }, {
    key: "parse",
    value: function parse(code) {
      var _this = this;

      return (0, _asyncToGenerator2["default"])(
      /*#__PURE__*/
      regeneratorRuntime.mark(function _callee() {
        return regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                return _context.abrupt("return", babelParser.parse(code, {
                  filename: _this.name,
                  allowReturnOutsideFunction: true,
                  strictMode: false,
                  sourceType: 'module',
                  plugins: ['exportDefaultFrom', 'exportNamespaceFrom', 'dynamicImport']
                }));

              case 1:
              case "end":
                return _context.stop();
            }
          }
        }, _callee);
      }))();
    }
  }, {
    key: "traverse",
    value: function traverse(visitor) {
      return _traverse(this.ast, visitor, null, this);
    }
  }, {
    key: "traverseFast",
    value: function traverseFast(visitor) {
      return walk.simple(this.ast, visitor, this);
    }
  }, {
    key: "collectDependencies",
    value: function collectDependencies() {
      walk.ancestor(this.ast, _collectDependencies, this);
    }
  }, {
    key: "pretransform",
    value: function pretransform() {
      var _this2 = this;

      return (0, _asyncToGenerator2["default"])(
      /*#__PURE__*/
      regeneratorRuntime.mark(function _callee2() {
        return regeneratorRuntime.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                if (!(_this2.options.sourceMaps && !_this2.sourceMap)) {
                  _context2.next = 4;
                  break;
                }

                _context2.next = 3;
                return loadSourceMap(_this2);

              case 3:
                _this2.sourceMap = _context2.sent;

              case 4:
                _context2.next = 6;
                return babel(_this2);

              case 6:
                if (!(_this2.options.target === 'browser' && ENV_RE.test(_this2.contents))) {
                  _context2.next = 10;
                  break;
                }

                _context2.next = 9;
                return _this2.parseIfNeeded();

              case 9:
                _this2.traverseFast(envVisitor);

              case 10:
                if (!(_this2.options.target === 'browser' && BROWSER_RE.test(_this2.contents))) {
                  _context2.next = 15;
                  break;
                }

                _context2.next = 13;
                return _this2.parseIfNeeded();

              case 13:
                _this2.traverse(processVisitor);

                _this2.isAstDirty = true;

              case 15:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2);
      }))();
    }
  }, {
    key: "transform",
    value: function transform() {
      var _this3 = this;

      return (0, _asyncToGenerator2["default"])(
      /*#__PURE__*/
      regeneratorRuntime.mark(function _callee3() {
        var pkg, ignore;
        return regeneratorRuntime.wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                if (!(_this3.options.target === 'browser')) {
                  _context3.next = 14;
                  break;
                }

                if (!(_this3.dependencies.has('fs') && FS_RE.test(_this3.contents))) {
                  _context3.next = 10;
                  break;
                }

                _context3.next = 4;
                return _this3.getPackage();

              case 4:
                pkg = _context3.sent;
                ignore = pkg && pkg.browser && pkg.browser.fs === false;

                if (ignore) {
                  _context3.next = 10;
                  break;
                }

                _context3.next = 9;
                return _this3.parseIfNeeded();

              case 9:
                _this3.traverse(fsVisitor);

              case 10:
                if (!GLOBAL_RE.test(_this3.contents)) {
                  _context3.next = 14;
                  break;
                }

                _context3.next = 13;
                return _this3.parseIfNeeded();

              case 13:
                walk.ancestor(_this3.ast, insertGlobals, _this3);

              case 14:
                if (!_this3.options.scopeHoist) {
                  _context3.next = 23;
                  break;
                }

                _context3.next = 17;
                return _this3.parseIfNeeded();

              case 17:
                _context3.next = 19;
                return _this3.getPackage();

              case 19:
                _this3.traverse(hoist);

                _this3.isAstDirty = true;
                _context3.next = 26;
                break;

              case 23:
                if (!_this3.isES6Module) {
                  _context3.next = 26;
                  break;
                }

                _context3.next = 26;
                return babel7(_this3, {
                  internal: true,
                  config: {
                    plugins: [require('@babel/plugin-transform-modules-commonjs')]
                  }
                });

              case 26:
                if (!_this3.options.minify) {
                  _context3.next = 29;
                  break;
                }

                _context3.next = 29;
                return terser(_this3);

              case 29:
              case "end":
                return _context3.stop();
            }
          }
        }, _callee3);
      }))();
    }
  }, {
    key: "generate",
    value: function generate() {
      var _this4 = this;

      return (0, _asyncToGenerator2["default"])(
      /*#__PURE__*/
      regeneratorRuntime.mark(function _callee4() {
        var code, opts, generated, rawMap;
        return regeneratorRuntime.wrap(function _callee4$(_context4) {
          while (1) {
            switch (_context4.prev = _context4.next) {
              case 0:
                if (!_this4.isAstDirty) {
                  _context4.next = 15;
                  break;
                }

                opts = {
                  sourceMaps: _this4.options.sourceMaps,
                  sourceFileName: _this4.relativeName
                };
                generated = _generate(_this4.ast, opts, _this4.contents);

                if (!(_this4.options.sourceMaps && generated.rawMappings)) {
                  _context4.next = 12;
                  break;
                }

                rawMap = new SourceMap(generated.rawMappings, _defineProperty({}, _this4.relativeName, _this4.contents)); // Check if we already have a source map (e.g. from TypeScript or CoffeeScript)
                // In that case, we need to map the original source map to the babel generated one.

                if (!_this4.sourceMap) {
                  _context4.next = 11;
                  break;
                }

                _context4.next = 8;
                return new SourceMap().extendSourceMap(_this4.sourceMap, rawMap);

              case 8:
                _this4.sourceMap = _context4.sent;
                _context4.next = 12;
                break;

              case 11:
                _this4.sourceMap = rawMap;

              case 12:
                code = generated.code;
                _context4.next = 16;
                break;

              case 15:
                code = _this4.outputCode != null ? _this4.outputCode : _this4.contents;

              case 16:
                if (_this4.options.sourceMaps && !_this4.sourceMap) {
                  _this4.sourceMap = new SourceMap().generateEmptyMap(_this4.relativeName, _this4.contents);
                }

                if (!(_this4.globals.size > 0)) {
                  _context4.next = 25;
                  break;
                }

                code = Array.from(_this4.globals.values()).join('\n') + '\n' + code;

                if (!_this4.options.sourceMaps) {
                  _context4.next = 25;
                  break;
                }

                if (_this4.sourceMap instanceof SourceMap) {
                  _context4.next = 24;
                  break;
                }

                _context4.next = 23;
                return new SourceMap().addMap(_this4.sourceMap);

              case 23:
                _this4.sourceMap = _context4.sent;

              case 24:
                _this4.sourceMap.offset(_this4.globals.size);

              case 25:
                return _context4.abrupt("return", [{
                  type: 'js',
                  value: code,
                  map: _this4.sourceMap
                }]);

              case 26:
              case "end":
                return _context4.stop();
            }
          }
        }, _callee4);
      }))();
    }
  }, {
    key: "generateErrorMessage",
    value: function generateErrorMessage(err) {
      var loc = err.loc;

      if (loc) {
        // Babel 7 adds its own code frame on the error message itself
        // We need to remove it and pass it separately.
        if (err.message.startsWith(this.name)) {
          err.message = err.message.slice(this.name.length + 1, err.message.indexOf('\n')).trim();
        }

        err.codeFrame = codeFrame(this.contents, {
          start: loc
        });
        err.highlightedCodeFrame = codeFrame(this.contents, {
          start: loc
        }, {
          highlightCode: true
        });
      }

      return err;
    }
  }]);

  return JSAsset;
}(Asset);

module.exports = JSAsset;