"use strict";
/* eslint-disable no-process-exit */

var util = require("util");

var _require = require("../../.."),
    JSDOM = _require.JSDOM;

var tough = require("tough-cookie");

var xhrSymbols = require("./xmlhttprequest-symbols.js");

var dom = new JSDOM();
var xhr = new dom.window.XMLHttpRequest();
var chunks = [];
process.stdin.on("data", function (chunk) {
  chunks.push(chunk);
});
process.stdin.on("end", function () {
  var buffer = Buffer.concat(chunks);
  var flag = JSON.parse(buffer.toString());

  if (flag.body && flag.body.type === "Buffer" && flag.body.data) {
    flag.body = Buffer.from(flag.body.data);
  }

  if (flag.cookieJar) {
    flag.cookieJar = tough.CookieJar.fromJSON(flag.cookieJar);
  }

  flag.synchronous = false;
  xhr[xhrSymbols.flag] = flag;
  var properties = xhr[xhrSymbols.properties];
  properties.readyState = xhr.OPENED;

  try {
    xhr.addEventListener("loadend", function () {
      if (properties.error) {
        properties.error = properties.error.stack || util.inspect(properties.error);
      }

      process.stdout.write(JSON.stringify({
        properties: properties
      }), function () {
        process.exit(0);
      });
    }, false);
    xhr.send(flag.body);
  } catch (error) {
    properties.error += error.stack || util.inspect(error);
    process.stdout.write(JSON.stringify({
      properties: properties
    }), function () {
      process.exit(0);
    });
  }
});