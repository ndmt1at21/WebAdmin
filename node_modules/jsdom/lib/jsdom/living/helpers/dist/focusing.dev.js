"use strict";

var nodeType = require("../node-type.js");

var FocusEvent = require("../generated/FocusEvent.js");

var idlUtils = require("../generated/utils.js");

var _require = require("./form-controls.js"),
    isDisabled = _require.isDisabled;

var _require2 = require("./traversal"),
    firstChildWithLocalName = _require2.firstChildWithLocalName;

var _require3 = require("./events"),
    createAnEvent = _require3.createAnEvent;

var _require4 = require("./namespaces"),
    HTML_NS = _require4.HTML_NS;

var focusableFormElements = new Set(["input", "select", "textarea", "button"]); // https://html.spec.whatwg.org/multipage/interaction.html#focusable-area, but also some of
// https://html.spec.whatwg.org/multipage/interaction.html#focusing-steps: e.g., Documents are not actually focusable
// areas, but their viewports are, and the first step of the latter algorithm translates Documents to their viewports.
// And also https://html.spec.whatwg.org/multipage/interaction.html#specially-focusable!

exports.isFocusableAreaElement = function (elImpl) {
  if (!elImpl._ownerDocument._defaultView && !elImpl._defaultView) {
    return false;
  }

  if (elImpl._nodeType === nodeType.DOCUMENT_NODE) {
    return true;
  }

  if (!Number.isNaN(parseInt(elImpl.getAttributeNS(null, "tabindex")))) {
    return true;
  }

  if (elImpl._namespaceURI === HTML_NS) {
    if (elImpl._localName === "iframe") {
      return true;
    }

    if (elImpl._localName === "a" && elImpl.hasAttributeNS(null, "href")) {
      return true;
    }

    if (elImpl._localName === "summary" && elImpl.parentNode && elImpl.parentNode._localName === "details" && elImpl === firstChildWithLocalName(elImpl.parentNode, "summary")) {
      return true;
    }

    if (focusableFormElements.has(elImpl._localName) && !isDisabled(elImpl)) {
      if (elImpl._localName === "input" && elImpl.type === "hidden") {
        return false;
      }

      return true;
    }
  }

  return false;
}; // https://html.spec.whatwg.org/multipage/interaction.html#fire-a-focus-event plus the steps of
// https://html.spec.whatwg.org/multipage/interaction.html#focus-update-steps that adjust Documents to Windows


exports.fireFocusEventWithTargetAdjustment = function (name, target, relatedTarget) {
  if (target === null) {
    // E.g. firing blur with nothing previously focused.
    return;
  }

  var event = createAnEvent(name, FocusEvent, {
    composed: true,
    relatedTarget: relatedTarget,
    view: target._ownerDocument._defaultView,
    detail: 0
  });

  if (target._defaultView) {
    target = idlUtils.implForWrapper(target._defaultView);
  }

  target._dispatch(event);
};