"use strict";

var Watcher = require('../index');

var _require = require('@parcel/test-utils'),
    sleep = _require.sleep;

var assert = require('assert');

describe('Watcher', function () {
  it('Should be able to create a new watcher', function _callee() {
    var watcher;
    return regeneratorRuntime.async(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            watcher = new Watcher();
            assert(!!watcher.child);
            assert(!watcher.ready);
            _context.next = 5;
            return regeneratorRuntime.awrap(sleep(1000));

          case 5:
            assert(!!watcher.child);
            assert(watcher.ready);
            _context.next = 9;
            return regeneratorRuntime.awrap(watcher.stop());

          case 9:
          case "end":
            return _context.stop();
        }
      }
    });
  });
  it('Should be able to properly destroy the watcher', function _callee2() {
    var watcher;
    return regeneratorRuntime.async(function _callee2$(_context2) {
      while (1) {
        switch (_context2.prev = _context2.next) {
          case 0:
            watcher = new Watcher();
            _context2.next = 3;
            return regeneratorRuntime.awrap(sleep(1000));

          case 3:
            assert(!!watcher.child);
            assert(watcher.ready);
            _context2.next = 7;
            return regeneratorRuntime.awrap(watcher.stop());

          case 7:
            assert(watcher.child.killed);

          case 8:
          case "end":
            return _context2.stop();
        }
      }
    });
  });
});