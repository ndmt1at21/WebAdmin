"use strict";

var Watcher = require('../index');

var fs = require('@parcel/fs');

var path = require('path');

var assert = require('assert');

describe('watched paths', function () {
  var tmpFolder = path.join(__dirname, './tmp/');
  before(function () {
    fs.mkdirp(tmpFolder);
  });
  it('Should return watched paths', function _callee() {
    var watcher, filepath;
    return regeneratorRuntime.async(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            watcher = new Watcher({});
            filepath = path.join(tmpFolder, 'file1.txt');
            _context.next = 4;
            return regeneratorRuntime.awrap(fs.writeFile(filepath, 'this is a text document'));

          case 4:
            watcher.add(filepath);
            assert(Object.keys(watcher.getWatched())[0] === filepath, 'getWatched should return all the watched paths.');
            _context.next = 8;
            return regeneratorRuntime.awrap(watcher.stop());

          case 8:
          case "end":
            return _context.stop();
        }
      }
    });
  });
});