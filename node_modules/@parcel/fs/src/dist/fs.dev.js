"use strict";

var _require = require('@parcel/utils'),
    promisify = _require.promisify;

var fs = require('fs');

var mkdirp = require('mkdirp');

var rimraf = require('rimraf');

exports.readFile = promisify(fs.readFile);
exports.writeFile = promisify(fs.writeFile);
exports.stat = promisify(fs.stat);
exports.readdir = promisify(fs.readdir);
exports.unlink = promisify(fs.unlink);
exports.rimraf = promisify(rimraf);

exports.realpath = function _callee(path) {
  var realpath;
  return regeneratorRuntime.async(function _callee$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          realpath = promisify(fs.realpath);
          _context.prev = 1;
          _context.next = 4;
          return regeneratorRuntime.awrap(realpath(path));

        case 4:
          path = _context.sent;
          _context.next = 9;
          break;

        case 7:
          _context.prev = 7;
          _context.t0 = _context["catch"](1);

        case 9:
          return _context.abrupt("return", path);

        case 10:
        case "end":
          return _context.stop();
      }
    }
  }, null, null, [[1, 7]]);
};

exports.lstat = promisify(fs.lstat);

exports.exists = function (filename) {
  return new Promise(function (resolve) {
    fs.exists(filename, resolve);
  });
};

exports.mkdirp = promisify(mkdirp);