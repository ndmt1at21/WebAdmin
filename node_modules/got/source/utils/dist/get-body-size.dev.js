'use strict';

var fs = require('fs');

var util = require('util');

var is = require('@sindresorhus/is');

var isFormData = require('./is-form-data');

module.exports = function _callee(options) {
  var body, _ref, size;

  return regeneratorRuntime.async(function _callee$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          body = options.body;

          if (!options.headers['content-length']) {
            _context.next = 3;
            break;
          }

          return _context.abrupt("return", Number(options.headers['content-length']));

        case 3:
          if (!(!body && !options.stream)) {
            _context.next = 5;
            break;
          }

          return _context.abrupt("return", 0);

        case 5:
          if (!is.string(body)) {
            _context.next = 7;
            break;
          }

          return _context.abrupt("return", Buffer.byteLength(body));

        case 7:
          if (!isFormData(body)) {
            _context.next = 9;
            break;
          }

          return _context.abrupt("return", util.promisify(body.getLength.bind(body))());

        case 9:
          if (!(body instanceof fs.ReadStream)) {
            _context.next = 15;
            break;
          }

          _context.next = 12;
          return regeneratorRuntime.awrap(util.promisify(fs.stat)(body.path));

        case 12:
          _ref = _context.sent;
          size = _ref.size;
          return _context.abrupt("return", size);

        case 15:
          return _context.abrupt("return", null);

        case 16:
        case "end":
          return _context.stop();
      }
    }
  });
};