"use strict";

var path = require('path');

var Benchmark = require('benchmark');

var addonName = path.basename(__filename, '.js');
[addonName, addonName + '_noexcept'].forEach(function (addonName) {
  var rootAddon = require('bindings')({
    bindings: addonName,
    module_root: __dirname
  });

  delete rootAddon.path;
  var getters = new Benchmark.Suite();
  var setters = new Benchmark.Suite();
  var maxNameLength = Object.keys(rootAddon).reduce(function (soFar, value) {
    return Math.max(soFar, value.length);
  }, 0);
  console.log("\n".concat(addonName, ": "));
  Object.keys(rootAddon).forEach(function (key) {
    getters.add("".concat(key, " getter").padStart(maxNameLength + 7), function () {
      var x = rootAddon[key];
    });
    setters.add("".concat(key, " setter").padStart(maxNameLength + 7), function () {
      rootAddon[key] = 5;
    });
  });
  getters.on('cycle', function (event) {
    return console.log(String(event.target));
  }).run();
  console.log('');
  setters.on('cycle', function (event) {
    return console.log(String(event.target));
  }).run();
});