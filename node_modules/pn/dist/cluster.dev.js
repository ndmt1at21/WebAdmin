"use strict";

var cluster = require("cluster");

var promisify = require("./_promisify.js");

var bind = function bind(c, f) {
  return f && f.bind(c);
};

Object.defineProperties(module.exports, {
  SCHED_NONE: {
    enumerable: true,
    value: cluster.SCHED_NONE
  },
  SCHED_RR: {
    enumerable: true,
    value: cluster.SCHED_RR
  },
  Worker: {
    enumerable: true,
    value: cluster.Worker
  },
  //_events: // skipping
  //_eventsCount: // skipping
  //_maxListeners: // skipping
  disconnect: {
    enumerable: true,
    value: promisify(cluster, cluster.disconnect, 0)
  },
  domain: {
    enumerable: true,
    get: function get() {
      return cluster.domain;
    },
    set: function set(v) {
      cluster.domain = v;
    }
  },
  fork: {
    enumerable: true,
    value: bind(cluster, cluster.fork)
  },
  isMaster: {
    enumerable: true,
    get: function get() {
      return cluster.isMaster;
    },
    set: function set(v) {
      cluster.isMaster = v;
    }
  },
  isWorker: {
    enumerable: true,
    get: function get() {
      return cluster.isWorker;
    },
    set: function set(v) {
      cluster.isWorker = v;
    }
  },
  schedulingPolicy: {
    enumerable: true,
    get: function get() {
      return cluster.schedulingPolicy;
    },
    set: function set(v) {
      cluster.schedulingPolicy = v;
    }
  },
  settings: {
    enumerable: true,
    get: function get() {
      return cluster.settings;
    },
    set: function set(v) {
      cluster.settings = v;
    }
  },
  setupMaster: {
    enumerable: true,
    value: bind(cluster, cluster.setupMaster)
  },
  workers: {
    enumerable: true,
    get: function get() {
      return cluster.workers;
    },
    set: function set(v) {
      cluster.workers = v;
    }
  }
});